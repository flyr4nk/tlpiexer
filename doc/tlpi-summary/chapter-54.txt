CHAPTER 54
POSIX SHARED MEMORY

OVERVIEW

    In previous chapters, we looked at two techniques that allow unrelated
    processes to share memory regions in order to perform IPC: System V
    shared memory (Chapter 48) and shared file mappings (Section 49.4.2). Both
    of there techniques have potential drawbacks:

        The System V shared memory model, which uses keys and identifiers, is
        not consistent with the standard UNIX I/O model, which uses filenames
        and descriptors. This difference mean that we require an entirely new
        set of system calls and commands for working with System V shared
        memory segments.

        Using a shared file mapping for IPC requires the creation of a disk
        file, even if we are not interested in having a persistent backing
        store for the shared region. A side from the inconvenience of needing
        to create the file, this technique incurs some file I/O overhead.

    Because of these drawbacks, POSIX.1b defined a new shared memory API:
    POSIX shared memory, which is subject of this chapter.

SUMMARY

    A POSIX shared memory object is used to share a region of memory between
    unrelated processes without creating an underlying disk file. To do this,
    we replace the call to open() that normally precedes mmap() with a call to
    shm_open(). The shm_open call creates a file in a memory-based file
    system, and we can employ traditional file descriptor system calls to
    perform various operations on this virtual file. In particular,
    ftruncate() must be used to set the size of the shared memory object,
    since initially it has a length of zero.

    We have now described three techniques for sharing memory regions between
    unrelated processes: System V shared memory, shared file mappings, and
    POSIX shared memory objects. There are several similarities between the
    three techniques. There are also some important differences, and, except
    for the issues of portability, there differences favor shared file
    mappings and POSIX shared memory objects.
